"""restructure seasons & episodes

Revision ID: 7f6e3631b327
Revises: bf75239e668e
Create Date: 2024-11-30 08:08:03.960297

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7f6e3631b327"
down_revision: Union[str, None] = "bf75239e668e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "series_season",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("series_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("season_number", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["series_metadata.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("series_id", "season_number"),
    )
    op.create_index(
        op.f("ix_series_season_season_number"),
        "series_season",
        ["season_number"],
        unique=False,
    )
    op.create_index(
        op.f("ix_series_season_series_id"), "series_season", ["series_id"], unique=False
    )
    op.create_table(
        "series_episode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("episode_number", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("plot", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("runtime", sa.Integer(), nullable=True),
        sa.Column("air_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("imdb_rating", sa.Float(), nullable=True),
        sa.Column("poster", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_poster_working", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["season_id"],
            ["series_season.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("season_id", "episode_number"),
    )
    op.create_index(
        op.f("ix_series_episode_episode_number"),
        "series_episode",
        ["episode_number"],
        unique=False,
    )
    op.create_index(
        op.f("ix_series_episode_season_id"),
        "series_episode",
        ["season_id"],
        unique=False,
    )
    op.create_table(
        "episode_file",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "torrent_stream_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("season_number", sa.Integer(), nullable=False),
        sa.Column("episode_number", sa.Integer(), nullable=False),
        sa.Column("file_index", sa.Integer(), nullable=True),
        sa.Column("filename", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("size", sa.BigInteger(), nullable=True),
        sa.Column("episode_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["episode_id"],
            ["series_episode.id"],
        ),
        sa.ForeignKeyConstraint(
            ["torrent_stream_id"],
            ["torrent_stream.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("torrent_stream_id", "season_number", "episode_number"),
    )
    op.create_index(
        op.f("ix_episode_file_torrent_stream_id"),
        "episode_file",
        ["torrent_stream_id"],
        unique=False,
    )
    op.drop_index("ix_episode_episode_number", table_name="episode")
    op.drop_table("episode")
    op.drop_index("idx_season_torrent_number", table_name="season")
    op.drop_table("season")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "season",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('season_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "torrent_stream_id", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column("season_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["torrent_stream_id"],
            ["torrent_stream.id"],
            name="season_torrent_stream_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="season_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "idx_season_torrent_number",
        "season",
        ["torrent_stream_id", "season_number"],
        unique=False,
    )
    op.create_table(
        "episode",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("season_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("episode_number", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("filename", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("file_index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "released",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["season_id"],
            ["season.id"],
            name="episode_season_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="episode_pkey"),
        sa.UniqueConstraint(
            "season_id", "episode_number", name="episode_season_id_episode_number_key"
        ),
    )
    op.create_index(
        "ix_episode_episode_number", "episode", ["episode_number"], unique=False
    )
    op.drop_index(op.f("ix_episode_file_torrent_stream_id"), table_name="episode_file")
    op.drop_table("episode_file")
    op.drop_index(op.f("ix_series_episode_season_id"), table_name="series_episode")
    op.drop_index(op.f("ix_series_episode_episode_number"), table_name="series_episode")
    op.drop_table("series_episode")
    op.drop_index(op.f("ix_series_season_series_id"), table_name="series_season")
    op.drop_index(op.f("ix_series_season_season_number"), table_name="series_season")
    op.drop_table("series_season")
    # ### end Alembic commands ###
